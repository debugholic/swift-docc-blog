{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","primaryContentSections":[{"content":[{"anchor":"%EA%B8%B0%EC%B4%88Basics","level":3,"type":"heading","text":"기초(Basics)"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"에서 스크롤이 가능하게 하려면 콘텐츠의 크기를 "},{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"에 알려 주는 "},{"type":"codeVoice","code":"contentSize"},{"type":"text","text":"를 설정하세요."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"현재 화면에 표시되는 콘텐츠 위치를 확인하려면 ","type":"text"},{"code":"UIScrollView","type":"codeVoice"},{"text":"의 ","type":"text"},{"code":"contentOffset","type":"codeVoice"},{"text":"을 사용하세요. 이것은 스크롤 뷰 프레임 내에서 현재 표시되는 화면의 왼쪽 상단 지점의 위치(스크롤 뷰의 원점(origin)으로부터 스크롤 위치까지의 오프셋)를 나타냅니다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스크롤 뷰에서 확대\/축소(zoom) 작업을 수행하려면:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"UIScrollViewDelegate"},{"type":"text","text":"를 따르는(conforming) 타입을 만들고 "},{"type":"codeVoice","code":"viewForZooming(in:)"},{"type":"text","text":"을 구현합니다."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"이 타입의 인스턴스를 "},{"code":"UIScrollView","type":"codeVoice"},{"type":"text","text":"의 인스턴스 델리게이트(instance delegate)로 설정합니다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"UIScrollView","type":"codeVoice"},{"text":" 인스턴스의 ","type":"text"},{"code":"minimumZoomScale","type":"codeVoice"},{"text":"과 ","type":"text"},{"code":"maximumZoomScale","type":"codeVoice"},{"text":"을 다른 값으로 설정합니다.(둘다 기본 값은 ","type":"text"},{"code":"1.0","type":"codeVoice"},{"text":"입니다.)","type":"text"}]}]}]}]}],"type":"unorderedList"},{"anchor":"%EA%B3%A0%EA%B8%89-%ED%85%8C%ED%81%AC%EB%8B%89Advanced-Techniques","level":3,"type":"heading","text":"고급 테크닉(Advanced Techniques)"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"무한 스크롤(Infinite scrolling)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"고정된 뷰(Stationary views)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"커스텀 터치 핸들링(Custom touch handling)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"확대\/축소 후 다시 그리기(Redraw after zooming)"}]}]}],"type":"orderedList"},{"anchor":"1-%EB%AC%B4%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4Infinite-scrolling","level":5,"type":"heading","text":"1. 무한 스크롤(Infinite scrolling)"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"📚 샘플 코드 ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/library\/archive\/samplecode\/StreetScroller\/StreetScroller.zip","type":"reference","isActive":true},{"text":" 다운로드","type":"text"}]}],"type":"aside","style":"note"},{"inlineContent":[{"type":"text","text":"사용자는 한 방향으로 스크롤을 계속할 수 있으며 콘텐츠의 가장 자리에 부딪히지 않습니다. (예: 포토 캐러셀(photo carousel))"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"구현 방법:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"contentSize","type":"codeVoice"},{"text":"를 화면에 표시되는 크기의 두 배 정도 크기로 만듭니다.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"사용자가 콘텐츠 가장자리 부근에 도달하려고 하면, "},{"code":"contentOffset","type":"codeVoice"},{"type":"text","text":"을 조정하여 "},{"code":"contentSize","type":"codeVoice"},{"type":"text","text":"(스크롤 가능한 영역)의 중앙으로 이동 시킵니다."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"콘텐츠 하위 뷰의 프레임을 "},{"type":"codeVoice","code":"contentOffset"},{"type":"text","text":"과 같은 양으로 조정하여, 계속 콘텐츠 영역의 가운데에 위치하도록 만듭니다."}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"마지막 두 단계는 동시에 수행되어야 하며 사용자는 이를 알아차릴 수 없습니다."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"사용자가 스크롤할 때마다 해당 하위 뷰를 다시 레이아웃(re-layout)하는 것이 아이디어입니다."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"두 가지 방법이 있습니다:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"의 하위 클래스를 만들고 "},{"type":"codeVoice","code":"layoutSubviews()"},{"type":"text","text":" 메서드를 오버라이딩합니다. "},{"type":"codeVoice","code":"layoutSubviews()"},{"type":"text","text":"는 확대\/축소와 스크롤 시의 모든 프레임에서(다른 말로, 스크롤 뷰 경계가 변경될 때마다) 호출됩니다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"UIScrollViewDelegate","type":"codeVoice"},{"text":"의 ","type":"text"},{"code":"scrollViewDidScroll(_:)","type":"codeVoice"},{"text":" 사용","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"다음은 가로 방향 무한 스크롤 뷰 코드입니다:"}],"type":"paragraph"},{"syntax":null,"code":["@implementation InfiniteScrollView","","\/\/ 무한 스크롤의 느낌을 내기 위해 주기적으로 콘텐츠를 최신 상태로 유지합니다.","- (void)recenterIfNecessary","{","    CGPoint currentOffset = [self contentOffset];","    CGFloat contentWidth = [self contentSize].width;","    CGFloat centerOffsetX = (contentWidth - [self bounds].size.width) \/ 2.0;","    CGFloat distanceFromCenter = fabs(currentOffset.x - centerOffsetX);","    ","    \/\/ 오프셋이 중심에서 25% 이상 벗어나면 중심을 다시 조정합니다. 딱히 정해진 것은 아닙니다(arbitrary).","    if (distanceFromCenter > (contentWidth \/ 4.0)) {","        self.contentOffset = CGPointMake(centerOffsetX, currentOffset.y);","        ","        \/\/ 콘텐츠를 같은 양만큼 이동하여 가만히 있는 것처럼 보이도록 합니다.","        for (UILabel *label in self.visibleLabels) {","            CGPoint center = [self.labelContainerView convertPoint:label.center toView:self];","            center.x += (centerOffsetX - currentOffset.x);","            label.center = [self convertPoint:center toView:self.labelContainerView];","        }","    }","}","","- (void)layoutSubviews","{","    [super layoutSubviews];","    [self recenterIfNecessary];","}","","...","","@end"],"type":"codeListing"},{"anchor":"2-%EA%B3%A0%EC%A0%95%EB%90%9C-%EB%B7%B0Stationary-views","level":5,"type":"heading","text":"2. 고정된 뷰(Stationary views)"},{"inlineContent":[{"text":"한 차원\/방향에서는 고정된 상태로 유지되지만 다른 축에서는 스크롤 콘텐츠와 함께 스크롤되는 뷰입니다. 헤더(header)와 푸터(footer)처럼 생각해보세요.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"이는 확대\/축소 또는 스크롤할 때에, 콘텐츠 영역 중 일정 영역은 움직이지 않아야 하는 경우입니다.(예: 이미지의 제목)","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"다음과 같은 시나리오를 상상해 봅시다:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스크롤 뷰 위에 붙는 이미지 제목이 있습니다."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"이미지를 스크롤하고 확대\/축소할 수 있지만 제목은 그대로 유지됩니다."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"제목은 사용자가 이미지를 아래로 스크롤할 때에는 사라지므로 이미지 전체를 볼 수 있습니다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"그 밖의 상호 작용(확대\/축소 또는 스크롤하면 제목이 다시 표시됨)"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"구성하기:"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"전체 공간을 차지하는 하나의 스크롤 뷰가 있으며 내부에 두 개의 하위 뷰가 있습니다."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"확대\/축소할 수 없는 헤더\/타이틀 뷰","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"확대\/축소할 수 있는 "},{"type":"codeVoice","code":"UIImageView"},{"type":"text","text":"가 있으며, "},{"type":"codeVoice","code":"viewForZooming(in:)"},{"type":"text","text":"으로 반환(return)하는 뷰입니다."}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"다음 할 일:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"UIImageView"},{"text":"만 스크롤할 수 있으므로, 가장 먼저 해야 할 일은 이미지 뷰에서 확대\/축소\/스크롤 시 헤더 뷰가 가로 중앙에 유지되는지 확인하는 것입니다. 이는 ","type":"text"},{"type":"codeVoice","code":"layoutSubviews()"},{"text":"에서 헤더의 ","type":"text"},{"type":"codeVoice","code":"frame.origin.x"},{"text":"을 ","type":"text"},{"type":"codeVoice","code":"contentOffset.x"},{"text":"과 동일한 값으로 설정하면 해결됩니다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스크롤 뷰를 확대하면 스크롤 뷰 콘텐츠의 크기가 "},{"code":"viewForZooming(in:)","type":"codeVoice"},{"type":"text","text":"에 반환되는 뷰의 확대된 크기로 자동 업데이트됩니다. 스크롤 뷰에 포함된 헤더 뷰의 크기를 고려하도록 "},{"code":"contentSize","type":"codeVoice"},{"type":"text","text":" 설정자(setter)를 오버라이딩해야 합니다."}]}]}],"type":"unorderedList"},{"anchor":"3-%EB%A7%9E%EC%B6%A4%ED%98%95-%ED%84%B0%EC%B9%98-%EC%B2%98%EB%A6%AC","level":5,"type":"heading","text":"3. 맞춤형 터치 처리"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 세션에서는 스크롤 뷰의 하위 뷰에 멀티터치 핸들러를 추가하는 방법을 중점적으로 다룹니다."}]}],"type":"aside","style":"note"},{"inlineContent":[{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"의 팬(pan) 및 핀치(pinch) 제스처 인식기(recognizer)는 "},{"type":"codeVoice","code":"panGestureRecognizer"},{"type":"text","text":" 및 "},{"type":"codeVoice","code":"pinchGestureRecognizer"},{"type":"text","text":" 속성을 통해 가져올 수 있습니다. 이는 각각 스크롤 및 확대\/축소용 제스처를 관리하기 위해 "},{"type":"codeVoice","code":"UIScrollView"},{"type":"text","text":"가 사용하는 것과 동일한 인식기입니다."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"이 세션에서는 다음과 같은 시나리오를 구현합니다:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"스크롤 뷰의 아래쪽에서 위\/아래로 스와이프하면 스크롤 뷰에서 스크롤하는 대신 다른 뷰가 나타나거나 사라집니다.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"구현(이 코드는 ","type":"text"},{"code":"loadView()\/viewDidLoad()","type":"codeVoice"},{"text":"에 추가할 수 있습니다):","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["UIScrollView *scrollView = [self scrollView]:","UISwipeGestureRecognizer *swipeUp = [[UISwipeGestureRecognizer alloc] initWithTarget:self action: @selector (handleSwipeUp:)];","swipeUp.direction = UISwipeGestureRecognizerDirectionUp;","","[scrollView addGestureRecognizer: swipeUp];","\/\/ 👇🏻 이것은 필수입니다. 그렇지 않으면 위로 스와이프하기 전에 항상 scrollView.panGestureRognizer가 트리거됩니다.","\/\/ 👇🏻 this is required, otherwise the scrollView.panGestureRecognizer would always trigger before our swipe up","[scrollView.panGestureRecognizer requireGestureRecognizerToFail:swipeUp];"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"이 구현에서는 제스처가 스와이프가 아닌지를 확인해야 하므로 스크롤 뷰 팬 제스처가 트리거될 때까지 기다리게 됩니다. 그러나 우리는 전체 화면이 아닌 스크롤 뷰의 하단에 대해서만 이 동작을 원합니다. 따라서 대상 영역을 제한할 수 있습니다:"}],"type":"paragraph"},{"syntax":null,"code":["- (BOOL) gestureRecognizer: (UIGestureRecognizer *)gestureRecognizer","        shouldReceiveTouch: (UITouch *) touch","{","  UIScrollView #scrollView = [self scrollView];","  CGRect  visibleBounds = [scrollView bounds]:","  CGPoint touchPoint = [touch locationInView:scrollView];","  if (touchPoint.y < CGRectGetMaxY(visibleBounds) - 75)","    return NO:","  return YES;","}"],"type":"codeListing"},{"anchor":"4-%ED%99%95%EB%8C%80%EC%B6%95%EC%86%8C-%ED%9B%84-%EB%8B%A4%EC%8B%9C-%EA%B7%B8%EB%A6%AC%EA%B8%B0","level":5,"type":"heading","text":"4. 확대\/축소 후 다시 그리기"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"📚 샘플 코드 "},{"identifier":"https:\/\/developer.apple.com\/library\/archive\/samplecode\/ScrollViewSuite\/ScrollViewSuite.zip","isActive":true,"type":"reference"},{"type":"text","text":" 다운로드"}]},{"type":"paragraph","inlineContent":[{"text":"📚 샘플 코드 ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/library\/archive\/samplecode\/PhotoScroller\/PhotoScroller.zip"},{"text":" 다운로드","type":"text"}]}],"name":"Note","style":"note"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 세션은 사용자가 확대\/축소를 완료한 후 다시 그려야 하는 작은 콘텐츠에 중점을 둡니다."}]}],"name":"Note","style":"note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"콘텐츠가 확대되면 흐릿해지기(blurry) 시작하므로 다시 그려서 다시 선명하게 만들고 싶다는 것이 이 세션의 아이디어입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 다시 그리기는 사용자가 확대\/축소하는 동안이 아니라 확대\/축소가 종료된 후에만 수행합니다(그 이유는 이 작업이 비용이 많이 들고 사용자가 계속 확대\/축소할 때 계속 버리게 되기 때문입니다): "},{"code":"scrollViewDidEndZooming(_:with:atScale:)","type":"codeVoice"},{"type":"text","text":"을 통해 얻을 수 있으며, 최종 배율이 무엇인지 알려주기도 합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"방법(⚠️ 작은 콘텐츠의 경우에만 해당):"}]},{"type":"codeListing","syntax":null,"code":["- (void)scrollViewDidEndZooming: (UIScrollView *) sv","                       withView: (UIView *) view","                       atScale: (float)scale","{","  scale *= [[[scrollView window] screen] scale]z:","  [view setContentScaleFactor:scale]:","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"뷰의 "},{"type":"codeVoice","code":"contentScaleFactor"},{"type":"text","text":"는 기본적으로 뷰의 바운드 크기에 적용되는 승수(multiplier)로, 뷰를 뒷받침하는 스토리지의 크기를 결정하는 데 사용됩니다."}]}],"kind":"content"}],"metadata":{"modules":[{"name":"debugholic의 Swift"}],"title":"Advanced ScrollView Techniques","roleHeading":"Session 104","role":"article"},"abstract":[{"type":"text","text":"1차원이나 2차원에서 무한 스크롤 형태를 구현하는 방법에 대해 알아봅시다. 또한 이미 그려져 있는 콘텐츠를 확대\/축소(zooming)하는 도중에 "},{"code":"CATiledLayer","type":"codeVoice"},{"type":"text","text":"를 사용하지 않으면서 해상도를 변경하는 방법도 살펴보겠습니다."}],"hierarchy":{"paths":[["doc:\/\/blog\/documentation\/blog","doc:\/\/blog\/documentation\/blog\/WWDC-Analysis","doc:\/\/blog\/documentation\/blog\/WWDC-11"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/blog\/documentation\/blog\/11-Session-104"},"references":{"doc://blog/documentation/blog":{"kind":"symbol","url":"\/documentation\/blog","title":"debugholic의 Swift","abstract":[{"type":"text","text":"스위프트 학습과 iOS 개발에 대한 블로그를 Swift-DocC를 이용하여 작성하는 프로젝트 입니다."}],"identifier":"doc:\/\/blog\/documentation\/blog","type":"topic","role":"collection"},"doc://blog/documentation/blog/WWDC-Analysis":{"abstract":[],"title":"WWDC 분석","url":"\/documentation\/blog\/wwdc-analysis","identifier":"doc:\/\/blog\/documentation\/blog\/WWDC-Analysis","role":"collectionGroup","type":"topic","kind":"article"},"https://developer.apple.com/library/archive/samplecode/ScrollViewSuite/ScrollViewSuite.zip":{"url":"https:\/\/developer.apple.com\/library\/archive\/samplecode\/ScrollViewSuite\/ScrollViewSuite.zip","identifier":"https:\/\/developer.apple.com\/library\/archive\/samplecode\/ScrollViewSuite\/ScrollViewSuite.zip","title":"ScrollViewSuite","type":"link","titleInlineContent":[{"type":"text","text":"ScrollViewSuite"}]},"https://developer.apple.com/library/archive/samplecode/StreetScroller/StreetScroller.zip":{"url":"https:\/\/developer.apple.com\/library\/archive\/samplecode\/StreetScroller\/StreetScroller.zip","identifier":"https:\/\/developer.apple.com\/library\/archive\/samplecode\/StreetScroller\/StreetScroller.zip","title":"StreetScroller","type":"link","titleInlineContent":[{"type":"text","text":"StreetScroller"}]},"https://developer.apple.com/library/archive/samplecode/PhotoScroller/PhotoScroller.zip":{"url":"https:\/\/developer.apple.com\/library\/archive\/samplecode\/PhotoScroller\/PhotoScroller.zip","identifier":"https:\/\/developer.apple.com\/library\/archive\/samplecode\/PhotoScroller\/PhotoScroller.zip","title":"PhotoScroller","type":"link","titleInlineContent":[{"type":"text","text":"PhotoScroller"}]},"doc://blog/documentation/blog/WWDC-11":{"kind":"article","url":"\/documentation\/blog\/wwdc-11","abstract":[],"identifier":"doc:\/\/blog\/documentation\/blog\/WWDC-11","role":"collectionGroup","type":"topic","title":"WWDC 11"}}}